<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

  Based on Microsoft.CppBuild.targets

  *This file is automatically generated. Local changes risk being overwriten by the export process.*

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <UseDefaultProjectTools>false</UseDefaultProjectTools>
    <UseDefaultPropertyPageSchemas>false</UseDefaultPropertyPageSchemas>
    <UseDefaultGeneralPropertyPageSchema>false</UseDefaultGeneralPropertyPageSchema>
  </PropertyGroup>

  <!-- 
    Property pages 
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(VCTargetsPath)\Platforms\Android\$(LangID)\android_ant_build.xml" Condition="'$(ConfigurationType)' == 'Application'" />
    <PropertyPageSchema Include="$(VCTargetsPath)\Platforms\Android\$(LangID)\android_deploy.xml" Condition="'$(ConfigurationType)' == 'Application'" />
  </ItemGroup>
  
  <!-- 
    Ant Build
  -->

  <!-- Hook in Ant Build if this is an application project -->
  <PropertyGroup Condition="'$(ConfigurationType)'=='Application'">
    <BuildLinkTargets>
      $(BuildLinkTargets);
      _BuildApk;
      _AdbDeployStep;
  </BuildLinkTargets>
    <BuildLinkAction>$(CommonBuildOnlyTargets);$(BeforeBuildLinkTargets);$(BuildLinkTargets);$(AfterBuildLinkTargets)</BuildLinkAction>
  </PropertyGroup>

  <Target Name="_AddAntBuild"
          DependsOnTargets="Link;">
    <ItemGroup>
      <AntBuild Include="$(TargetPath)"/>
    </ItemGroup>
  </Target>

  <Target Name="_AddAdbDeploy"
          DependsOnTargets="AntBuild;">
    <ItemGroup>
      <Deploy Include="$(TargetPath)"/>
    </ItemGroup>
  </Target>

  <Target Name="_BuildApk"
          DependsOnTargets="Link;_AddAntBuild;AntBuild;">
  </Target>

  <Target Name="_AdbDeployStep"
    DependsOnTargets="AntBuild;_AddAdbDeploy;PostAntDeploy;">
  </Target>

  <Target Name="AntBuild"
          Condition="'@(AntBuild)' != ''">

    <PropertyGroup>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</AntBuild_MinimalRebuildFromTracking>
      <AntBuild_MinimalRebuildFromTracking Condition="'$(AntBuild_MinimalRebuildFromTracking)' == ''">true</AntBuild_MinimalRebuildFromTracking>
    </PropertyGroup>

    <PropertyGroup>
      <ApkLibsPath Condition="'$(TargetArchitecture)' == 'armv5te'">armeabi</ApkLibsPath>
      <ApkLibsPath Condition="'$(TargetArchitecture)' == 'armv7-a'">armeabi-v7a</ApkLibsPath>
      <ApkLibsPath Condition="'$(TargetArchitecture)' == 'x86'">x86</ApkLibsPath>
      <ApkLibsPath Condition="'$(TargetArchitecture)' == 'mips'">mips</ApkLibsPath>
    </PropertyGroup>

    <AntBuild
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"
        Sources                        ="@(AntBuild)"

        ApkLibsPath                    ="$(ApkLibsPath)"

        AntBuildPath                   ="%(AntBuild.AntBuildPath)"
        AntAndroidSdkPath              ="$(AndroidSdkRoot)"
        AntJavaHomePath                ="$(JavaHomeRoot)"
        AntBuildType                   ="%(AntBuild.AntBuildType)"
        AntLibraryName                 ="%(AntBuild.AntLibraryName)"
        JVMHeapInitial                 ="%(AntBuild.JVMHeapInitial)"
        JVMHeapMaximum                 ="%(AntBuild.JVMHeapMaximum)"
        IgnoreJavaOpts                 ="%(AntBuild.IgnoreJavaOpts)"

        TrackerLogDirectory            ="%(AntBuild.TrackerLogDirectory)"

        TLogReadFiles                  ="@(AntBuildTLogReadFiles)"
        TLogWriteFiles                 ="@(AntBuildTLogWriteFiles)"
        ToolExe                        ="$(AntBuildToolExe)"
        ToolPath                       ="$(AntBuildToolPath)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(AntBuild_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(AntBuild.AcceptableNonZeroExitCodes)"

        GCCToolPath                    ="$(AntBatPath)"
    >
      <Output TaskParameter="SkippedExecution" PropertyName="AntBuildSkippedExecution" />
      <Output TaskParameter="OutputFile" PropertyName="ApkPath" />
      <Output TaskParameter="PackageName" PropertyName="PackageName" />
      <Output TaskParameter="ActivityName" PropertyName="ActivityName" />
    </AntBuild>

  </Target>


  <!-- 
    PostAntDeploy
  -->

  <Target Name="PostAntDeploy"
      AfterTargets="AntBuild"
      DependsOnTargets="_AddAntBuild;_AddAdbDeploy"
      Condition="'$(ConfigurationType)'=='Application' and '@(Deploy)' != ''"
    >

    <PropertyGroup>
      <AdbDeploy_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'">false</AdbDeploy_MinimalRebuildFromTracking>
      <AdbDeploy_MinimalRebuildFromTracking Condition="'$(AdbDeploy_MinimalRebuildFromTracking)' == ''">true</AdbDeploy_MinimalRebuildFromTracking>
      <AdbDeploySkip Condition="'%(Deploy.DeploymentType)' != 'DeployOff'">false</AdbDeploySkip>
      <AdbDeploySkip Condition="'%(Deploy.DeploymentType)' == 'DeployOff'">true</AdbDeploySkip>
    </PropertyGroup>

      <Message Text="$(CRLF)$(CRLF)Deploying... ( Use 'Build -> Cancel' - to halt deploy )$(CRLF)" Importance="High" Condition="'$(AdbDeploySkip)' == 'false'" />

    <PropertyGroup>
      <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployOff'"></DeviceArgs>
      <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToAny'"></DeviceArgs>
      <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToDevice'">-d</DeviceArgs>
      <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToEmulator'">-e</DeviceArgs>
      <DeviceArgs Condition="'%(Deploy.DeploymentType)' == 'DeployToSpecific'">-s</DeviceArgs>
      <SpecificTargetName Condition="'%(Deploy.DeploymentType)' != 'DeployToSpecific'"></SpecificTargetName>
      <SpecificTargetName Condition="'%(Deploy.DeploymentType)' == 'DeployToSpecific'">%(Deploy.DeploySpecificTargetName)</SpecificTargetName>
    </PropertyGroup>

    <PropertyGroup>
      <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'None'"></UninstallArgs>
      <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'Uninstall'">uninstall {PackageName}</UninstallArgs>
      <UninstallArgs Condition="'%(Deploy.DeployUninstall)' == 'UninstallKeep'">shell pm uninstall -k {PackageName}</UninstallArgs>
    </PropertyGroup>

    <PropertyGroup>
      <InstallArgs Condition="'%(Deploy.DeployInstall)' == 'Reinstall'">install -r {ApkPath}</InstallArgs>
      <InstallArgs Condition="'%(Deploy.DeployInstall)' == 'Install'">install {ApkPath}</InstallArgs>
    </PropertyGroup>

    <PropertyGroup>
      <AntBuildPath>%(AntBuild.AntBuildPath)</AntBuildPath>
      <AntBuildType>%(AntBuild.AntBuildType)</AntBuildType>
    </PropertyGroup>

    <!-- Wait for device to respond. So adb plays ball... -->
    <AdbDeploy Condition="'$(AdbDeploySkip)' == 'false'"

        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"

        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"

        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="wait-for-device"
    >
    </AdbDeploy>

    <!-- Uninstall step, if required... -->
    <AdbDeploy Condition="'%(Deploy.DeployUninstall)' != 'None' and '$(AdbDeploySkip)' == 'false'"

        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"

        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"

        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="$(UninstallArgs)"
    >
    </AdbDeploy>

    <!-- Install step, if required... -->
    <AdbDeploy Condition="'$(AdbDeploySkip)' == 'false'"
        BuildingInIDE                  ="$(BuildingInsideVisualStudio)"

        AntBuildPath                   ="$(AntBuildPath)"
        AntBuildType                   ="$(AntBuildType)"

        TrackerLogDirectory            ="%(Deploy.TrackerLogDirectory)"

        TLogReadFiles                  ="@(DeployTLogReadFiles)"
        TLogWriteFiles                 ="@(DeployTLogWriteFiles)"
        TrackFileAccess                ="$(TrackFileAccess)"
        MinimalRebuildFromTracking     ="$(Deploy_MinimalRebuildFromTracking)"

        AcceptableNonZeroExitCodes     ="%(Deploy.AcceptableNonZeroExitCodes)"

        AdbPath                        ="$(AndroidAdbPath)"
        DeviceArgs                     ="$(DeviceArgs) $(SpecificTargetName)"
        Params                         ="$(InstallArgs)"
        GenerateCmdFilePath            ="$(IntDir)\vs-android_launch.cmd"
    >
    </AdbDeploy>

  </Target>

  <!-- 
    Deploy - One-off deploys
  -->

  <Target Name="Deploy"
      Condition="'$(ConfigurationType)'=='Application'"
      DependsOnTargets="_AdbDeployStep;"
    >
  </Target>

  <PropertyGroup>
    <PrepareForBuildDependsOn>PlatformPrepareForBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
    <PrepareForBuildDependsOn Condition="'$(ConfigurationType)'=='Application'">PlatformPrepareForBuild;PlatformPrepareForBuild_AntBuild;$(PrepareForBuildDependsOn)</PrepareForBuildDependsOn>
  </PropertyGroup>
  
  <!-- 
    PlatformPrepareForBuild
  -->

  <Target Name="PlatformPrepareForBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <!-- For VS2012. $(TargetName) doesn't seem to be defined where TargetPath is setup in the MS scripts. Crude fix for it. -->
    <PropertyGroup Condition="$(VisualStudioVersion) != '10.0'">
      <TargetPath>$([System.IO.Path]::Combine($(ProjectDir),$(OutDir)$(TargetName)$(TargetExt)))</TargetPath>
    </PropertyGroup>

    <!-- Error out if the project references a missing platform toolset -->
    <VCMessage Code="MSB8008" Type="Error" Arguments="$(PlatformToolset)" Condition="!(exists('$(VCTargetsPath)\Platforms\Android\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.Android.$(PlatformToolset).targets'))"/>

    <Error Condition="$(VisualStudioVersion) != '10.0' and $(VisualStudioVersion) != '11.0' and $(VisualStudioVersion) != '12.0'" 
           Text="Unknown version of Visual Studio: $(VisualStudioVersion)" ></Error>

  </Target>

  <Target Name="PlatformPrepareForBuild_AntBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">

    <PropertyGroup>
      <CRLF>%0D%0A</CRLF>
      <SDKMissing>Could not find the Android SDK. Have you run the SDK Manager? Try setting the ANDROID_HOME environment variable to the SDK root.</SDKMissing>
      <SDKDownload>The Android SDK can be downloaded at this URL:$(CRLF)http://developer.android.com/sdk/index.html</SDKDownload>
      <JavaMissing>Could not find the Java installation, check that your JAVA_HOME path is correct!$(CRLF)It's currently: '$(JavaHomeRoot)'</JavaMissing>
      <JavaDownload>The Java JDK can be downloaded at this URL:$(CRLF)http://www.oracle.com/technetwork/java/javase/downloads/index.html$(CRLF)Be sure to download the 32-bit version (x86) of the JDK, even if you're running 64-bit Windows.</JavaDownload>
      <AntMissing>Could not find the Apache Ant installation, check that your ANT_HOME path is correct!$(CRLF)It's currently: '$(AntRoot)'</AntMissing>
      <AntDownload>Apache Ant can be downloaded at this URL:$(CRLF)http://ant.apache.org/</AntDownload>
    </PropertyGroup>

    <!-- .apk building needs all of these -->

    <!-- Android SDK Checks -->
    <Error Condition="!exists('$(AndroidSdkRoot)')"   Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>
    <Error Condition="!exists('$(AndroidAdbPath)')"   Text="$(SDKMissing)$(CRLF)$(SDKDownload)"></Error>

    <!-- Java Home Checks -->
    <Error Condition="!exists('$(JavaCompilerPath)')" Text="$(JavaMissing)$(CRLF)$(JavaDownload)"></Error>

    <!-- Apache Ant Checks -->
    <Error Condition="!exists('$(AntRoot)')"      Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>
    <Error Condition="!exists('$(AntBatPath)')"   Text="$(AntMissing)$(CRLF)$(AntDownload)"></Error>

  </Target>
  

</Project>

<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
