<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidNdkDepends" AssemblyFile="$(VCTargetsPath)\Application Type\Android\bin\AndroidPlusPlus.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidApkInputsTargets>$(ComputeAndroidApkInputsTargets);ComputeAndroidDalvikOutput;</ComputeAndroidApkInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidApk;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidApk"
    Condition="'$(ConfigurationType)' == 'Application'"
    DependsOnTargets="$(ComputeAndroidApkInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="AndroidApk"
    BeforeTargets="$(AndroidApkBeforeTargets)"
    AfterTargets="$(AndroidApkAfterTargets)"
    DependsOnTargets="AndroidManifest;_AndroidApk;">

    <!--
      Register shared libraries (.so) which will need to be copied to the final APK .\lib\[arch] directory.
    -->

    <ItemGroup Condition="'$(ConfigurationType)' == 'Application'">
      <!-- First-party (linker output) and third-party provided libraries. -->
      <_TargetElfFiles Include="
        @(Link->Metadata('OutputFile'));
        @(LinkOutputFiles->Metadata('FullPath'));
        $(ProjectDir)lib\$(TargetPlatformArchitectureEabi)\*.so;
        $(ProjectDir)libs\$(TargetPlatformArchitectureEabi)\*.so">
      </_TargetElfFiles>
      <_TargetElfFilesDistinct Include="@(_TargetElfFiles->Distinct())"/>
      <_TargetElfSearchPaths Include="
        @(_TargetElfFilesDistinct->'%(RootDir)%(Directory)');
        %(Link.AdditionalLibraryDirectories);
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)">
      </_TargetElfSearchPaths>
    </ItemGroup>

    <!--
      Search for application library (ELF) dependencies. Use 'ndk-depends' to help evaluate this.
    -->

    <AndroidNdkDepends 
      Condition="'@(_TargetElfFilesDistinct)' != ''" 
      TargetElfFiles="@(_TargetElfFilesDistinct->Metadata('FullPath'))"
      LibrarySearchPaths="@(_TargetElfSearchPaths->Distinct())"
      NdkDependsTool="$(VCTargetsPath)\Application Type\Android\bin\app-ndk-depends.exe"
      Verbose="true">
      <Output TaskParameter="DependentLibraries" ItemName="AndroidApkDependentLibraries" />
      <Output TaskParameter="DependentSystemLibraries" ItemName="AndroidApkDependentSystemLibraries" />
    </AndroidNdkDepends>

    <!-- 
      Recursively copy registered native libraries/tools to appropriate architecture paths. 
    -->

    <ItemGroup Condition="'$(ConfigurationType)' == 'Application'">
      <_CopyNativeLibrariesAndTools Condition="'@(AndroidApkDependentLibraries)' != ''" Include="@(AndroidApkDependentLibraries->Distinct())">
        <IntermediateDirectory>$(IntDir)raw</IntermediateDirectory>
      </_CopyNativeLibrariesAndTools>
      
      <!-- Copy appropriate target architecture 'gdbserver' instance. -->
      <_CopyNativeLibrariesAndTools Condition="('$(UseDebugLibraries)' == 'true' or '%(AndroidManifest.DebugMode)' == 'true')" Include="$(PlatformToolsetGdbServer)">
        <IntermediateDirectory>$(IntDir)raw</IntermediateDirectory>
      </_CopyNativeLibrariesAndTools>
    </ItemGroup>
    
    <Copy 
      Condition="'@(_CopyNativeLibrariesAndTools)' != ''" 
      SourceFiles="@(_CopyNativeLibrariesAndTools->Distinct())" 
      DestinationFiles="@(_CopyNativeLibrariesAndTools->'%(IntermediateDirectory)\lib\$(TargetPlatformArchitectureEabi)\%(Filename)%(Extension)')" 
    />

    <!-- 
      Duplicate initial AndroidManifest-produced APK (so we can modify it without triggering incremental builds) 
    -->

    <ItemGroup>
      <_UnsignedOutputFile Include="$(IntDir)bin\$(ProjectName)-$(Configuration.Replace(' ','_'))-Unsigned.apk" />
    </ItemGroup>

    <Copy 
      SourceFiles="@(AndroidManifestOutputApk)" 
      DestinationFiles="@(_UnsignedOutputFile)">
      <Output TaskParameter="CopiedFiles" ItemName="AndroidApkUnsignedOutputFile" />
    </Copy>

    <!-- 
      Add registered files to the final APK using a 7zip deployment (significantly faster than AAPT). 
        
        Registering example: 
        
        <ItemGroup>
          <AndroidApk Include="$(IntDir)**\libs\**\*" />
        </ItemGroup> 
    -->

    <Copy 
      Condition="'@(AndroidApk)' != ''"
      SourceFiles="@(AndroidApk)" 
      DestinationFiles="@(AndroidApk->'$(IntDir)raw\%(RecursiveDir)%(Filename)%(Extension)')"
    />

    <Exec 
      Condition="'@(AndroidApkUnsignedOutputFile)' != ''"
      Command="7za.exe a -tzip -mx9 -ssc -r &quot;@(AndroidApkUnsignedOutputFile->Metadata('FullPath'))&quot; * &gt;NUL" 
      WorkingDirectory="$(IntDir)raw"
    />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidApkOutput"
    DependsOnTargets="AndroidApk">

    <ItemGroup>
      <AndroidApkSign Include="@(AndroidApkUnsignedOutputFile)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidApk">

    <ItemGroup>
      <CleanAndroidApkCacheFiles
        Include="
        $(IntDir)*.apk;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\gdbserver;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\*.a;
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi)\*.so;
        $(IntDir)raw\**\*;"
      />
      <CleanAndroidApkCacheDirectories
        Include="
        $(IntDir)raw\lib\$(TargetPlatformArchitectureEabi);
        "
      />
    </ItemGroup>

    <Delete Files="@(CleanAndroidApkCacheFiles)" />

    <RemoveDir Directories="@(CleanAndroidApkCacheDirectories)" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
