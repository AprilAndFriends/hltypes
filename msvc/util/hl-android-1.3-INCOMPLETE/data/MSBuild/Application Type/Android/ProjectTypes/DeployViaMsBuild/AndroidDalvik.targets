<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <ItemGroup>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml" />
  </ItemGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <UsingTask TaskName="AndroidDex" AssemblyFile="$(VCTargetsPath)\Application Type\Android\bin\AndroidPlusPlus.MsBuild.DeployTasks.dll" />

  <UsingTask TaskName="VCMessage" AssemblyName="Microsoft.Build.CppTasks.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <PropertyGroup>

    <ComputeAndroidDalvikInputsTargets>$(ComputeAndroidDalvikInputsTargets);ComputeAndroidProguardOutput;</ComputeAndroidDalvikInputsTargets>

    <CleanDependsOn>$(CleanDependsOn);CleanAndroidDalvik;</CleanDependsOn>

  </PropertyGroup>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="_AndroidDalvik"
    DependsOnTargets="$(ComputeAndroidDalvikInputsTargets)">
  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  
  <Target
    Name="AndroidDalvik"
    Condition="'$(ConfigurationType)' == 'Application'"
    BeforeTargets="$(AndroidDalvikBeforeTargets)"
    AfterTargets="$(AndroidDalvikAfterTargets)"
    DependsOnTargets="_AndroidDalvik">

    <!-- 
      Flag sources for incremental build.
    -->

    <ItemGroup>
      <AndroidDalvik Condition="'@(AndroidDalvik)' != ''">
        <MinimalRebuildFromTracking Condition="'%(AndroidDalvik.MinimalRebuildFromTracking)' == '' and '$(BuildType)' == 'Build' and '$(ForceRebuild)' != 'true'">true</MinimalRebuildFromTracking>
      </AndroidDalvik>
    </ItemGroup>

    <!--
      The following is a work-around for a hard-limit of Java methods in the Dalvik Executable (DEX) format.
      - Take the whole program optimised output and process this for a list of activities and native classes.
      - Each of the flagged classes will need be prioritised into the first (primary) 'classes.dex' file.
      - Other classes will either be packed into 'classes.dex', or overflow into 'classes#.dex' alternatives.
      - There is a set of support library functionality to help with loading these files at runtime (Android L supports multi-dex natively).
      
      More information: https://developer.android.com/tools/building/multidex.html
    -->

    <PropertyGroup>
      <_DexOutputPath>$(ProjectDir)$(IntDir)bin\dex\</_DexOutputPath>
      <!-- MultiDex script configuration -->
      <_MainDexInputJars>@(AndroidDalvik->Distinct()->'-injars &quot;%(FullPath)&quot;(!META-INF/**.*,**.class,!**.class.d)')</_MainDexInputJars>
      <_MainDexScriptOutputJar>$(ProjectDir)$(IntDir)bin\mainDexClasses.tmp.jar</_MainDexScriptOutputJar>
      <_MainDexScriptOutputMainList>$(ProjectDir)$(IntDir)bin\mainDexClasses.keep</_MainDexScriptOutputMainList>
      <_MainDexClassPathArgument>@(AndroidDalvik->Distinct())</_MainDexClassPathArgument>
      <_MainDexScriptCommandFile>$(ProjectDir)$(IntDir)bin\mainDex-commands.txt</_MainDexScriptCommandFile>
      <_MainDexOutputLog>$(ProjectDir)$(IntDir)bin\mainDex-output.txt</_MainDexOutputLog>
      <!-- and because Google love moving things for no reason -->
      <_MainDexScriptRules>$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\mainDexClasses.rules</_MainDexScriptRules>
      <_MainDexShrunkAndroidJar>$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\shrinkedAndroid.jar</_MainDexShrunkAndroidJar>
      <_MainDexScriptRules Condition="!Exists('$(_MainDexScriptRules)')">$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\mainDexClasses.rules</_MainDexScriptRules>
      <_MainDexShrunkAndroidJar Condition="!Exists('$(_MainDexShrunkAndroidJar)')">$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\lib\shrinkedAndroid.jar</_MainDexShrunkAndroidJar>
    </PropertyGroup>

    <!-- Create an empty output jar. -->
    <Exec 
      Condition="!Exists('$(_MainDexScriptOutputJar)')"
      Command="REM.&gt;&quot;$(_MainDexScriptOutputJar)&quot;"
    />

    <WriteLinesToFile
      Condition="'@(AndroidDalvik)' != ''"
      File="$(_MainDexScriptCommandFile)"
      Lines=";
# 
# Configuration options copied from $(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\multidex\mainDexClasses.bat
# 
-include &quot;$(_MainDexScriptRules)&quot;
$(_MainDexInputJars)
-libraryjars &quot;$(_MainDexShrunkAndroidJar)&quot;
-outjars &quot;$(_MainDexScriptOutputJar)&quot;
-dontwarn
-forceprocessing
-dontoptimize
-dontobfuscate
-dontpreverify
# 
# Retain all classes with native members (http://proguard.sourceforge.net/manual/examples.html#native)
# TODO: This should have 'includedescriptorclasses', but this isn't supported in ProGuard 4.7.
# 
-keepclasseswithmembers class * {
  native &lt;methods&gt;$(Semicolon)
}
-keepclasseswithmembernames class * {
  native &lt;methods&gt;$(Semicolon)
}"
      Overwrite="true"
    />

    <!-- Run ProGuard. -->
    <Exec
      Condition="'@(AndroidDalvik)' != ''"
      Command="&quot;$(JavaHomeDir)\bin\java.exe&quot; -jar &quot;$(AndroidSdkRoot)\tools\proguard\lib\proguard.jar&quot; -include &quot;$(_MainDexScriptCommandFile)&quot; &gt;$(_MainDexOutputLog) 2&gt;&amp;1"
    />

    <!-- Run Multi-dex processing. -->
    <Exec 
      Condition="'@(AndroidDalvik)' != ''"
      Command="&quot;$(JavaHomeDir)\bin\java.exe&quot; -Djava.ext.dirs=&quot;$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\lib&quot; com.android.multidex.ClassReferenceListBuilder &quot;$(_MainDexScriptOutputJar)&quot; &quot;$(_MainDexClassPathArgument)&quot; 1&gt;&quot;$(_MainDexScriptOutputMainList)&quot;" 
    />

    <!-- 
      Configure output path, and ensure requested output directories exist.
    -->

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName($(_DexOutputPath)))" />

    <ItemGroup>
      <AndroidDalvik>
        <OutputPath>$(_DexOutputPath)</OutputPath>
        <MultiDexMainList>$(_MainDexScriptOutputMainList)</MultiDexMainList>
        <!-- 'incremental' is not supported with 'multi-dex' (suppress error)-->
        <Incremental Condition="'%(MultiDex)' == 'true'">false</Incremental>
        <!-- 'num-threads' is ignored when used with 'multi-dex' (suppress warning) -->
        <NumberOfThreads Condition="'%(MultiDex)' == 'true'"></NumberOfThreads>
        <!-- Nuke any additional parameters if 'multi-dex' isn't activated. -->
        <MultiDexMainList Condition="'%(MultiDex)' != 'true'"></MultiDexMainList>
        <MultiDexMinimalMainDex Condition="'%(MultiDex)' != 'true'"></MultiDexMinimalMainDex>
      </AndroidDalvik>
    </ItemGroup>

    <!-- 
      Process input class-paths and generate a Dalvik executable (i.e. classes.dex) 
    -->

    <AndroidDex
      BuildingInIDE="$(BuildingInsideVisualStudio)"
      Condition="'@(AndroidDalvik)' != ''"
      Sources="@(AndroidDalvik)"
      OutputPath="%(AndroidDalvik.OutputPath)"
      TrackerLogDirectory ="%(AndroidDalvik.TrackerLogDirectory)"
      TrackFileAccess="$(TrackFileAccess)"
      MinimalRebuildFromTracking="%(AndroidDalvik.MinimalRebuildFromTracking)"
      OutputCommandLine="%(AndroidDalvik.OutputCommandLine)"
      ToolPath="$(JavaHomeDir)\bin"
      ToolExe="java.exe"
      DexJar="$(AndroidSdkRoot)\build-tools\$(AndroidSdkBuildToolsVersion)\lib\dx.jar"
      PropertiesFile="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).xml">
      <Output TaskParameter="OutputFiles" ItemName="AndroidDalvikOutputFiles" />
      <Output TaskParameter="SkippedExecution" PropertyName="AndroidDalvikSkippedExecution" />
    </AndroidDex>

    <ItemGroup>
      <!-- Ensure DEX output is referenced even when builds are skipped due to minimal rebuilds. -->
      <AndroidDalvikOutputFiles Condition="'$(AndroidDalvikSkippedExecution)' == 'true'" Include="$(_DexOutputFile)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target
    Name="ComputeAndroidDalvikOutput"
    DependsOnTargets="AndroidDalvik">

    <ItemGroup>
      <AndroidApk Include="@(AndroidDalvikOutputFiles)" />
    </ItemGroup>

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

  <Target Name="CleanAndroidDalvik">

    <ItemGroup>
      <CleanAndroidDalvikCache
        Include="
        $(IntDir)bin\**\*.dex;
        $(IntDir)bin\**\*.dex.d;"
      />
    </ItemGroup>

    <Delete Files="@(CleanAndroidDalvikCache)" />

  </Target>

  <!--
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->

</Project>
